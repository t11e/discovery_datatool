<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema"
    targetNamespace="http://transparensee.com/schema/datatool-config-5"
    xmlns:tns="http://transparensee.com/schema/datatool-config-5"
    elementFormDefault="qualified"
    >

    <element name="config" type="tns:ConfigType"/>

    <complexType name="ConfigType">
      <sequence>
        <element name="accessControl" type="tns:AccessControlType" minOccurs="0" maxOccurs="1"/>
        <element name="dataSources" type="tns:DataSourcesType"/>
        <element name="profiles" type="tns:ProfilesType" minOccurs="0" maxOccurs="1"/>
        <element name="publishers" type="tns:PublishersType" minOccurs="0" maxOccurs="1"/>
      </sequence>
    </complexType>

    <complexType name="AccessControlType">
      <annotation>
        <documentation xml:lang="en">
          Optional restrict feed access using basic HTTP authentication.
          Since datatool-config-3.
          By adding the element, you turn on basic HTTP authentication.
          Add child user elements.
        </documentation>
      </annotation>
      <sequence minOccurs="0">
        <element name="user">
          <complexType>
            <attribute name="name" type="string" use="required"/>
            <attribute name="password" type="string" use="required"/>
          </complexType>
        </element>
      </sequence>
    </complexType>

    <complexType name="DataSourcesType">
      <sequence minOccurs="1" maxOccurs="unbounded">
        <choice>
          <element name="dataSource" type="tns:DataSourceType"/>
          <element name="driver" type="tns:DriverType"/>
        </choice>
      </sequence>
    </complexType>

    <complexType name="DataSourceType">
      <sequence minOccurs="0" maxOccurs="unbounded">
        <any processContents="lax"/>
      </sequence>
      <attribute name="name" type="string" use="required"/>
      <attribute name="jar" type="string" use="optional"/>
      <attribute name="class" type="string" use="required"/>
    </complexType>

    <complexType name="DriverType">
      <sequence>
        <element name="url"/>
        <element name="username" minOccurs="0"/>
        <element name="password" minOccurs="0"/>
        <element name="properties" minOccurs="0">
          <complexType>
            <sequence minOccurs="0" maxOccurs="unbounded">
              <any processContents="lax"/>
            </sequence>
          </complexType>
        </element>
      </sequence>
      <attribute name="name" type="string" use="required"/>
      <attribute name="jar" type="string" use="optional"/>
      <attribute name="class" type="string" use="required"/>
    </complexType>

    <complexType name="ProfilesType">
      <sequence minOccurs="1" maxOccurs="unbounded">
        <element name="sqlProfile" type="tns:SqlProfileType"/>
      </sequence>
    </complexType>

    <complexType name="PublishersType">
      <sequence minOccurs="0" maxOccurs="unbounded">
        <element name="sqlPublisher" type="tns:SqlPublisherType"/>
      </sequence>
    </complexType>

    <complexType name="SqlProfileType">
      <sequence>
        <element name="createSql" type="string" minOccurs="0">
          <annotation>
            <documentation xml:lang="en">
              Optional SQL used to create a profile when one is not found.
              Since datatool-config-2.
              Bound parameters:
                :name -- profile name
              Outputs:
                none
            </documentation>
          </annotation>
        </element>
        <element name="retrieveSql" type="tns:retrieveSql"/>
        <element name="updateSql" type="string"/>
      </sequence>
      <attribute name="name" type="string" use="required"/>
      <attribute name="dataSource" type="string" use="required"/>
    </complexType>

    <complexType name="retrieveSql" mixed="true">
      <attribute name="startColumn" use="required"/>
      <attribute name="endColumn" use="required"/>
    </complexType>

    <complexType name="SqlPublisherType">
      <sequence>
        <choice minOccurs="0" maxOccurs="1">
          <element name="bulk" type="tns:BulkFullType"/>
          <element name="full" type="tns:BulkFullType"/>
          <element name="snapshot" type="tns:SnapshotOrDeltaType"/>
        </choice>
        <element name="delta" minOccurs="0" maxOccurs="1" type="tns:SnapshotOrDeltaType"/>
      </sequence>
      <attribute name="name" type="string" use="required"/>
      <attribute name="dataSource" type="string" use="required"/>
      <attribute name="profile" type="string" use="optional"/>
    </complexType>

    <complexType name="BulkFullType">
      <sequence>
        <element name="set-item" minOccurs="0" maxOccurs="unbounded" type="tns:SetItemType"/>
      </sequence>
    </complexType>

    <complexType name="SnapshotOrDeltaType">
      <sequence minOccurs="0" maxOccurs="unbounded">
        <choice minOccurs="0" maxOccurs="1">
          <element name="set-item" minOccurs="0" maxOccurs="unbounded" type="tns:SetItemType"/>
          <element name="remove-item" minOccurs="0" maxOccurs="unbounded" type="tns:RemoveItemType"/>
        </choice>
      </sequence>
    </complexType>

    <complexType name="SetItemType">
      <sequence>
        <element name="query" type="string"/>
        <element name="merge-columns" type="tns:MergeColumnsType" minOccurs="0" maxOccurs="unbounded"/>
        <element name="subquery" type="tns:SubQueryType" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute name="idColumn" type="string" use="required"/>
      <attribute name="jsonColumnNames" type="string"  use="optional"/>
      <attribute name="providerColumn" use="optional" type="string"/>
      <attribute name="kindColumn" use="optional" type="string"/>
    </complexType>

    <complexType name="RemoveItemType">
      <sequence>
        <element name="query" type="string"/>
      </sequence>
      <attribute name="idColumn" type="string" use="required"/>
      <attribute name="providerColumn" use="optional" type="string"/>
      <attribute name="kindColumn" use="optional" type="string"/>
    </complexType>

    <complexType name="SubQueryType">
      <simpleContent>
        <extension base="string">
          <attribute name="delimiter" type="string" use="optional" />
          <attribute name="property" type="string" use="optional"/>
          <attribute name="propertyPrefix" type="string" use="optional"/>
          <attribute name="discriminator" type="string" use="optional"/>
          <attribute name="type" type="tns:SubQueryTypeType" default="array" />
        </extension>
      </simpleContent>
    </complexType>

    <simpleType name="SubQueryTypeType">
      <restriction base="string">
        <enumeration value="array"/>
        <enumeration value="delimited"/>
      </restriction>
    </simpleType>

    <complexType name="MergeColumnsType">
      <attribute name="keyColumn" type="string" use="required"/>
      <attribute name="valueColumn" type="string" use="required"/>
    </complexType>

    <simpleType name="ActionTypeType">
      <restriction base="string">
        <enumeration value="create"/>
        <enumeration value="delete"/>
      </restriction>
    </simpleType>

    <simpleType name="FilterActionType">
      <restriction base="string">
        <enumeration value="delta"/>
        <enumeration value="snapshot"/>
      </restriction>
    </simpleType>
</schema>
